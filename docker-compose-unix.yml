version: '3'
services:
  rust:
    image: "rust:latest"
    working_dir: /usr/src/myapp
    volumes:
      - ./blockchain:/usr/src/myapp
    depends_on:
      - "db"
    command: ["./wait-for-postgres.sh", "db:5432", "--", "cargo", "run"]
    ports:
      - "8081:8081"

  golang:
    image: "golang:1.10.2-stretch"
    working_dir: /go/src/app
    volumes:
      - ./backend_go:/go/src/app
    command: /bin/sh -c "go get github.com/gin-gonic/gin && go get github.com/jinzhu/gorm && go get github.com/jinzhu/gorm/dialects/postgres && go run index.go"
    links:
      - db
    ports:
      - "8080:8080"

  iot:
    image: "golang:1.10.2-stretch"
    working_dir: /go/src/app
    volumes:
      - ./iot_server:/go/src/app
    command: /bin/sh -c "go get && go run index.go"
    ports:
      - "3001:3000"


  py_test:
    image: "python:3.7.0b3-alpine3.7"
    working_dir: /usr/src/app
    volumes:
      - ./e2e_test:/usr/src/app
    command: python main.py
    links:
      - golang
      - rust
      - react


  react:
    image: "node:9.11.1-alpine"
    working_dir: /home/node/app
    volumes:
      - ./frontend:/home/node/app
    command: /bin/sh -c "npm install && npm start"
    ports:
      - "3000:3000"
    links:
      - golang

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 123
    expose:
      - "5432"
    ports:
      - "5432:5432"